version: "3.9"

services:

  db: # container that contains MariaDB only without nginx
    container_name: db
    image: db
    hostname: db
    restart: unless-stopped # restarts in case of a crash
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?MYSQL_ROOT_PASSWORD is not set}
      - MYSQL_DATABASE=${MYSQL_DATABASE:?MYSQL_DATABASE is not set}
      - MYSQL_USER=${MYSQL_USER:?MYSQL_USER is not set}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:?MYSQL_PASSWORD is not set}
    networks:
      - docker-network

  wordpress: # container that contains WordPress + php-fpm
    container_name: wordpress
    image: wordpress
    hostname: wordpress
    restart: unless-stopped # restarts in case of a crash
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wordpress_data:/var/www/html/
    environment:
      - MYSQL_HOST=${MYSQL_HOST:?MYSQL_HOST is not set}
      - MYSQL_DATABASE=${MYSQL_DATABASE:?MYSQL_DATABASE is not set}
      - MYSQL_USER=${MYSQL_USER:?MYSQL_USER is not set}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:?MYSQL_PASSWORD is not set}
      - DOMAIN_NAME=${DOMAIN_NAME:?DOMAIN_NAME is not set}
      - ADMIN_NAME=${ADMIN_NAME:?ADMIN_NAME is not set}
      - ADMIN_EMAIL=${ADMIN_EMAIL:?ADMIN_EMAIL is not set}
      - ADMIN_PWD=${ADMIN_PWD:?ADMIN_PWD is not set}
    depends_on:
      - db
    networks:
      - docker-network

  nginx: # container that contains NGINX with TLSv1.2 or TLSv1.3 only
    container_name: nginx
    image: nginx
    hostname: nginx
    restart: unless-stopped # restarts in case of a crash
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:?DOMAIN_NAME is not set}
      - ADMIN_NAME=${ADMIN_NAME:?ADMIN_NAME is not set}
    ports:
      - 443:443
    volumes:
      - wordpress_data:/var/www/html/
    depends_on:
      - wordpress
    networks:
      - docker-network


volumes:
  db_data: # volume that contains the WordPress database
    driver: local # default driver
    driver_opts:
      device: "/home/$ADMIN_NAME/data/db"
      type: none # default, no physical disk partition linked to the mound point
      o: bind # custom mount options
  wordpress_data: # 2d volume that contains the WordPress files
    driver: local
    driver_opts:
      device: "/home/$ADMIN_NAME/data/wordpress"
      type: none
      o: bind

networks:
  docker-network: # establishes the connection between the containers
